
.form__group {
    margin-bottom: 15px;
}


.form__label,
label {
    font-weight: bold;
    margin-bottom: 5px;
    max-width: 100%;
}


label {
    display: inline-block;
}


.form__label--hidden {
    .screenreader;
}







/**********************************************************************/
// Normalize form controls
//
// While most of our form styles require extra classes, some basic
// normalization is required to ensure optimum display with or without those
// classes to better address browser inconsistencies.

input[type="search"] {
    -webkit-appearance: none; // Search inputs in iOS, https://github.com/twbs/bootstrap/issues/11586.
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
    margin: 4px 0 0;
    margin-top: 1px \9; // IE8-9
    line-height: normal;
}

// Set the height of file controls to match text inputs
input[type="file"] {
    display: block;
}

// Make range inputs behave like textual form controls
input[type="range"] {
    display: block;
    width: 100%;
}

// Make multiple select elements height not fixed
select[multiple],
select[size] {
    height: auto;
}

// Focus for file, radio, and checkbox
input[type="file"]:focus,
input[type="radio"]:focus,
input[type="checkbox"]:focus {
    outline: thin dotted;
    outline-offset: -2px;
}

// Adjust output element
output {
    display: block;
    padding-top: 11px;
    font-size: 16px;
    line-height: 1.6;
    color: @black;
}

/**********************************************************************/
// Common form controls
//
// Shared size and type resets for form controls. Apply `.form__field` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]



.form__field {
    display: block;
    width: 100%;
    // Make inputs at least the height of their button counterpart
    // (base line-height + padding-top + padding-bottom + border)
    height: 37px;
    padding: 5px 10px;
    font-size: 16px;
    line-height: 1.6;
    color: @black;
    background-color: @white;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid #ccc;
    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
    transition: border-color 0.15s ease-in-out 0s, box-shadow 0.15s ease-in-out 0s;

    // Customize the `:focus` state to imitate native WebKit styles.
    &:focus{
        border-color: #66afe9;
        box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset, 0 0 8px rgba(102, 175, 233, 0.6);
        outline: 0 none;
    }

    /*
    // Placeholder
    @include placeholder;

    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty,
    // we don't honor that edge case; we style them as disabled anyway.
    &[disabled],
    &[readonly],
    fieldset[disabled] & {
        cursor: $cursor-disabled;
        background-color: $field-bg-disabled;
        opacity: 1; // iOS fix for unreadable disabled content
    }
    */
    // [converter] extracted textarea& to textarea.form__field
}

// Small fields for day, month and year.
.form__field--day,
.form__field--month {
    width: 4em;
}
.form__field--year {
    width: 4.5em;
}

// Small field for time.
.form__field--time {
    width: 6em;
}

// Reset height for `textarea`s
textarea.form__field {
    height: auto;
}

/**********************************************************************
 * Special styles for iOS temporal inputs
 *
 * In Mobile Safari, setting `display: block` on temporal inputs causes the
 * text within the input to become vertically misaligned. As a workaround, we
 * set a pixel line-height that matches the given height of the input, but only
 * for Safari.
 */

@media screen and (-webkit-min-device-pixel-ratio: 0) {
    input[type="date"],
    input[type="time"],
    input[type="datetime-local"],
    input[type="month"] {
        line-height: 37px;
    }
    
    input[type="date"].form__field--sm,
    input[type="time"].form__field--sm,
    input[type="datetime-local"].form__field--sm,
    input[type="month"].form__field--sm {
    }

    input[type="date"].form__field--lg,
    input[type="time"].form__field--lg,
    input[type="datetime-local"].form__field--lg,
    input[type="month"].form__field--lg {
    }
    
}


/**********************************************************************
 * Form groups
 * Designed to help with the organization and spacing of vertical forms.
 */

.form__group {
  margin-bottom: 15px;
}


/**********************************************************************
 * Checkboxes and radios
 * Indent the labels to position radios/checkboxes as hanging controls.
 */

.form__radio,
.form__checkbox {
    position: relative;
    display: block;
    margin-top: 10px;
    margin-bottom: 10px;

    label {
        // Ensure the input doesn't jump when there is no text
        min-height: 25px;
        padding-left: 25px;
        margin-bottom: 0;
        font-weight: normal;
        cursor: pointer;
    }
}
.form__radio input[type="radio"],
.form__radio-inline input[type="radio"],
.form__checkbox input[type="checkbox"],
.form__checkbox-inline input[type="checkbox"] {
    position: absolute;
    margin-left: -(25px);
    margin-top: 6px \9;
}

// Radios and checkboxes on same line.
// See also the .form__*-inline--boxed styles above for a variation.
.form__radio-inline,
.form__checkbox-inline {
    display: inline-block;
    padding-left: 25px;
    padding-right: 10px;
    margin-bottom: 0;
    vertical-align: middle;
    font-weight: normal;
    cursor: pointer;
}
.form__radio-inline + .form__radio-inline,
.form__checkbox-inline + .form__checkbox-inline {
    margin-top: 0;
    margin-left: 10px; // space out consecutive inline controls
}

// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's
// `cursor`.
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
    &[disabled] {
        cursor: not-allowed;
    }
}

// These classes are used directly on <label>s
.form__radio-inline,
.form__checkbox-inline {
    &.is-disabled {
        color: #999;
        cursor: not-allowed;
    }
}
// These classes are used on elements with <label> descendants
.form__radio,
.form__checkbox {
    cursor: pointer;

    &.is-disabled {
        cursor: not-allowed;
        color: #999;
        label {
            cursor: not-allowed;
        }
    }
}




// BOXED RADIOS AND CHECKBOXES.
// Put the control and the label inside a full-width coloured box.
.form__radio--boxed,
.form__checkbox--boxed,
.form__radio-inline--boxed,
.form__checkbox-inline--boxed {
    background: none repeat scroll 0 0 #fff;
    border: 1px solid transparent;

    &:not(.is-disabled):hover {
        background: none repeat scroll 0 0 #eff3f3;
        border-color: #ccc;
    }

    > label {
        padding-left: (15px + 25px);
        width: 100%;
    }

    &.is-selected {
        background: none repeat scroll 0 0 #b8e3df;

        &:hover {
            border-color: transparent;
            background: none repeat scroll 0 0 #b8e3df;
        }
    }
}
.form__radio--boxed,
.form__checkbox--boxed {
    width: 100%;

    > .form__radio__desc,
    > .form__checkbox__desc {
        padding-left: (15px + 25px);
        padding-top: 0;
        margin-top: -(10px);
    }
}

.form__radio-inline--boxed,
.form__checkbox-inline--boxed {
    padding-top: 5px;
    padding-left: (10px + 25px);
    padding-bottom: 5px;
}

// We don't want spaces between .*--boxed and .box.js-revealable's following
// them. Just adding negative top margin looks odd when it's revealed.
// So, we're trying this:
.form__radio--boxed + .box.js-revealable,
.form__checkbox--boxed + .box.js-revealable {
    position:      relative;
    top:           -(10px);
    margin-bottom: -(10px);
}

// Variations of the above styles when they appear within different boxes.

.box--1 {
    .form__radio--boxed,
    .form__checkbox--boxed,
    .form__radio-inline--boxed,
    .form__checkbox-inline--boxed {
        // Standard style by default.

        &.is-selected {
            background: none repeat scroll 0 0 #fff;
            // Don't add a border or it'll look odd if immediately followed by
            // a .box--2 revealable. (eg ESA form distance questions.)
        }
    }
}

.box--2 {
    .form__radio--boxed,
    .form__checkbox--boxed,
    .form__radio-inline--boxed,
    .form__checkbox-inline--boxed {
        background: #eee;

        &:hover {
            border-color: #ccc;
        }

        &.is-selected {
            border-color: #ccc;
            background: #ccc;
        }
    }
}

.panel--a {
    .form__radio--boxed,
    .form__checkbox--boxed,
    .form__radio-inline--boxed,
    .form__checkbox-inline--boxed {
        background: #eee;

        &:hover {
            background: #ccc;
        }

        &.is-selected {
            border-color: #ccc;
        }
    }
}


/**********************************************************************
 * Form control sizing
 * Build on `.form__field` with modifier classes to decrease or increase the
 * height and font-size of form controls.
 */

//@include input-size('.form__field--sm, .form__group--sm .form__field', $field-height-small, $field-padding-small-vertical, $field-padding-small-horizontal, $font-size-small, $line-height-small, 0);

//@include input-size('.form__field--lg, .form__group--lg .form__field', $field-height-large, $field-padding-large-vertical, $field-padding-large-horizontal, $font-size-large, $line-height-large, 0);


/**********************************************************************
 * Feedback states
 */
.has-success {
    // @include form__field-validation($success-text-color, $success-border, @white);
}
.has-warning {
    // @include form__field-validation($warning-text-color, $warning-border, @white);
}
.has-error {
    // @include form__field-validation($danger-text-color, $danger-border, @white);
}


/**********************************************************************
 * Help text
 *
 * Apply to any element you wish to create light text for placement immediately
 * below a form control. Use for general help, formatting, or instructional
 * text.
 */
.form__help {
    color: #666;
    margin-bottom: 5px;
}

// For 'required' or 'optional' hints.
.form__hint {
    color: #999;
    display: inline-block;
    font-weight: 400;
    margin-left: 2px;

    // Hasty fix; don't want to show 'required' markers on Pension Credit
    // Checker, ESA Quick Checker, etc.
    .panel & {
        display: none;
    }
}

.form__error {
    color: #c02f43;
    display: block;
    font-weight: 400;
    margin-top: 5px;
}

/**********************************************************************
 * Static fields.
 */

.form__field--static {
    max-width: 100%;
    margin-bottom: 5px;
    display: block;
}

/**********************************************************************
 * Inline forms.
 *
 * Wrap inputs and buttons in a .form--inline element.
 * They will then go inline, except at the narrowest width.
 */
// Not currently used.
//.form--inline {
    //@include breakpoint($breakpoint-sm-min) {
        //margin-bottom: 10px;

        //.form__group {
            //display: inline-block;
            //margin-bottom: 0;
            //vertical-align: middle;
        //}

        //.form__label {
            //margin-right: 5px;
            //margin-bottom: 0;
            //vertical-align: middle;
        //}

        //.form__field {
            //margin-right: 10px;
            //display: inline-block;
            //width: auto;
            //vertical-align: middle;
        //}

        //.button {
            //padding-top: 1px;
            //padding-bottom: 2px;
        //}
    //}
//}

/**
 * Probably to put around a .form__group (containing a label and input) plus
 * a button. It will hide the label and the button's text, and butt the
 * button up to the right-hand end of the input.
 * Good for a search box.
 */
.form--inline-group {
    .form__group {
        display: inline-block;
    }

    @media (max-width: @screen-sm-min) {
        display: table;
        margin-bottom: (1em / 2);

        .form__group {
            display: table-cell;
            margin-bottom: 0;
            vertical-align: middle;
        }

        .form__label {
            /* Note: If you make the label visible, things might get screwy in IE8. */
            .screenreader;
        }

        .form__hint {
            display: none;
        }

        .form__field {
            display: inline-block;
            width: auto;
            vertical-align: middle;
            margin-right: 0;
        }

        .button {
            display: table-cell;
            padding: 1px 3px 2px 1px;

            .fa-stack {
                margin-left: 0;
            }
        }

        .button__label {
            .screenreader;
        }
    }
}

