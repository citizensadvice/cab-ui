/**
 * SIMPLE GRID
 * New simple grid built with a mixin and loop
 */

// Define grid parameters
@columns:   12;
@gutters:   @box-spacing*2;

.row {
    margin-bottom: 0;
    @media (min-width:@breakpoint-sm){
        margin: 0 -@gutters @gutters 0;
        clear: both;
        padding: 0;
        overflow: hidden;
    }
    @media (min-width:@breakpoint-sm) and (max-width:@breakpoint-md) {
        margin: 0 -@gutters*.5 @gutters*.5 0;
    }
    .ie8 & {
        margin: 0 -2% 2% 0 !important;
        clear: both !important;
        padding: 0 !important;
        overflow: hidden !important;
    }
}

// Create mixin
// Mixin allows you to make any element a fraction width,
// for example .col(3/5); will make an element width 60%
.col(@x;@y;) {
    float: left;
    width: @full-page-width;
    margin-bottom: @gutters;

    @media (min-width:@breakpoint-sm) {
        // Create calc grid for modern browsers
        width: calc(percentage((@x/@y)) ~"-"@gutters);
        margin-right: @gutters;
        margin-bottom: 0;
    }

    @media (min-width:@breakpoint-sm) and (max-width:@breakpoint-md) {
        // Create calc grid for modern browsers
        width: calc(percentage((@x/@y)) ~"-"@gutters*.5);
        margin-right: @gutters*.5;
    }

    .ie8 & {
        // Create IE8 fallback. Due to lack of calc() support
        // columns use an extra 2% as a gutter
        width: unit(percentage((@x/@y)) - 2, ~"% !important");
        margin-right: 2% !important;
        margin-bottom: 0 !important;
    }

    // Remove bottom margin from the last nested row, to
    // keep vertical spacing consistent
    & > *[class*="row"]:last-child {
        margin-bottom: 0;
    }
    & .row:last-child *[class*="span"]:last-child {
        margin-bottom: 0;
    }
    & > h1:first-of-type,
    & > h2:first-of-type,
    & > h3:first-of-type,
    & > h4:first-of-type,
    & > h5:first-of-type,
    & > h6:first-of-type {
        margin-top: 0;
    }
}

// Create loop that iterate through the columns
.grid-loop (@i) when (@i > 0) {
    // Rename this to change column class names
    .span@{i} {
        .col(@i,@columns);
    }
    .grid-loop(@i - 1);
}

// Create a class for each column
.grid-loop(@columns);
